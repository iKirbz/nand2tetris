<tokens>
	<keyword> class </keyword>
	<identifier> Main </identifier>
	<symbol> { </symbol>
	<keyword> function </keyword>
	<keyword> void </keyword>
	<identifier> main </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<keyword> var </keyword>
	<identifier> ExampleClass </identifier>
	<identifier> exampleVar </identifier>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> exampleVar </identifier>
	<symbol> = </symbol>
	<identifier> ExampleClass </identifier>
	<symbol> . </symbol>
	<identifier> new </identifier>
	<symbol> ( </symbol>
	<integerConstant> 10 </integerConstant>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> exampleVar </identifier>
	<symbol> . </symbol>
	<identifier> display </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> do </keyword>
	<identifier> Main </identifier>
	<symbol> . </symbol>
	<identifier> process </identifier>
	<symbol> ( </symbol>
	<identifier> exampleVar </identifier>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> return </keyword>
	<symbol> ; </symbol>
	<symbol> } </symbol>
	<keyword> function </keyword>
	<keyword> void </keyword>
	<identifier> process </identifier>
	<symbol> ( </symbol>
	<identifier> ExampleClass </identifier>
	<identifier> obj </identifier>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<keyword> do </keyword>
	<identifier> obj </identifier>
	<symbol> . </symbol>
	<identifier> display </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<keyword> return </keyword>
	<symbol> ; </symbol>
	<symbol> } </symbol>
	<symbol> } </symbol>
</tokens>